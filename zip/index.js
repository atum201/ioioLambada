const AWS=require("aws-sdk"),ddb=new AWS.DynamoDB.DocumentClient;var TableName="ioioG",AttributesToGet=["id","c","p","l"];function F(e){let t=Object.assign({TableName:TableName,FilterExpression:" s = :s and m.e = :me and m.t = :mt and f = :f and m.s = :ms",ExpressionAttributeValues:{":s":0,":me":e.m.e,":mt":e.m.t,":f":e.f,":ms":e.m.s},Select:"SPECIFIC_ATTRIBUTES",ProjectionExpression:AttributesToGet.join(",")},{});return ddb.scan(t).promise()}function C(e){let t=process.env.id++,s={TableName:TableName,Item:Object.assign({id:t,c:(new Date).getTime(),s:0},e)},r={TableName:TableName,Key:{id:t},AttributesToGet:AttributesToGet};return ddb.put(s).promise().then(()=>ddb.get(r).promise())}function U(e,t){let s=-1;e.p.map((e,r)=>(0==e&&t.p[r]>0&&(s=r),e)),s>0&&(e.p[s]=t.p[s],e.l[s]=t.p[s]);let r=e.id,a={TableName:TableName,Key:{id:r},UpdateExpression:"set p = :p, l = :l",ExpressionAttributeValues:{":p":e.p,":l":e.l}},n={TableName:TableName,Key:{id:r},AttributesToGet:AttributesToGet};return ddb.update(a).promise().then(()=>ddb.get(n).promise())}function V(e){return!0}exports.handler=(e,t)=>{console.log("event starting here"),V(e)||t.succeed({error:0}),F(e.g).then(s=>{0==s.Items.length?C(e.g).then(e=>{t.succeed(e)}).catch(e=>{t.succeed({error:e.message})}):U(s.Items[0],e.g).then(e=>{t.succeed(e)}).catch(e=>{t.succeed({error:e.message})})})};